public class com.moaibot.common.utils.GraphUtils extends java.lang.Object
{
    private static final java.lang.String EXT_JPG;
    private static final java.lang.String EXT_PNG;
    private static final int MAX_DECODE_PIXELS;
    private static final int MAX_SAMPLE_SIZE;
    private static final java.lang.String TAG;
    private static java.lang.reflect.Field inInputShareableField;
    private static java.lang.reflect.Field inPurgeableField;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/moaibot/common/utils/GraphUtils";
        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();
        <com.moaibot.common.utils.GraphUtils: java.lang.String TAG> = $r1;
        <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inPurgeableField> = null;
        <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inInputShareableField> = null;
        staticinvoke <com.moaibot.common.utils.GraphUtils: void initCompatibility()>();
        return;
    }

    public void <init>()
    {
        com.moaibot.common.utils.GraphUtils $r0;

        $r0 := @this: com.moaibot.common.utils.GraphUtils;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    private static int calcSampleSize(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $i4 = 1;

     label0:
        if $i4 <= 64 goto label2;

        $i4 = 64;

     label1:
        return $i4;

     label2:
        $i6 = $i0 / $i4;
        $i7 = $i1 / $i4;
        $i7 = $i6 * $i7;
        $i7 = $i7 * 2;
        if $i7 > 3000000 goto label3;

        $i7 = $i4 * 2;
        $i7 = $i0 / $i7;
        if $i7 <= $i2 goto label1;

        $i7 = $i4 * 2;
        $i7 = $i1 / $i7;
        if $i7 <= $i3 goto label1;

     label3:
        $i4 = $i4 * 2;
        goto label0;
    }

    private static void copyFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.IOException $r2;
        java.io.File $r3, $r4;

        $r0 := @parameter0: java.lang.String;
        $r1 := @parameter1: java.lang.String;
        $r3 = new java.io.File;

     label0:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);
        $r4 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();
        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();
        $r4 = new java.io.File;
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r0);
        staticinvoke <com.moaibot.common.utils.FileUtils: void copyFile(java.io.File,java.io.File)>($r4, $r3);

     label1:
        return;

     label2:
        $r2 := @caughtexception;
        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();
        goto label1;

        catch java.io.IOException from label0 to label1 with label2;
    }

    public static android.graphics.BitmapFactory$Options createDefaultBitmapFactoryOptions()
    {
        java.lang.Exception $r0;
        android.graphics.BitmapFactory$Options $r1;
        java.lang.reflect.Field $r2;
        java.lang.String $r3, $r4;

        $r1 = new android.graphics.BitmapFactory$Options;
        specialinvoke $r1.<android.graphics.BitmapFactory$Options: void <init>()>();
        $r2 = <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inPurgeableField>;
        if $r2 == null goto label1;

        $r2 = <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inPurgeableField>;

     label0:
        virtualinvoke $r2.<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>($r1, 1);

     label1:
        $r2 = <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inInputShareableField>;
        if $r2 == null goto label2;

        $r2 = <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inInputShareableField>;
        virtualinvoke $r2.<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>($r1, 1);

     label2:
        return $r1;

     label3:
        $r0 := @caughtexception;
        $r4 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        $r3 = virtualinvoke $r0.<java.lang.Exception: java.lang.String getMessage()>();
        staticinvoke <com.moaibot.common.utils.LogUtils: void d(java.lang.String,java.lang.String)>($r4, $r3);
        return $r1;

        catch java.lang.Exception from label0 to label2 with label3;
    }

    public static android.graphics.Bitmap createReflectionImageWithOrigin(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0, $r6, $r7, $r9;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3;
        android.graphics.Matrix $r2;
        android.graphics.Paint $r3;
        android.graphics.LinearGradient $r4;
        android.graphics.Shader$TileMode $r5;
        android.graphics.Bitmap$Config $r8;
        android.graphics.Canvas $r10;
        android.graphics.PorterDuffXfermode $r12;
        android.graphics.PorterDuff$Mode $r13;

        $r0 := @parameter0: android.graphics.Bitmap;
        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        $r2 = new android.graphics.Matrix;
        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();
        virtualinvoke $r2.<android.graphics.Matrix: boolean preScale(float,float)>(1.0F, -1.0F);
        $i0 = $i3 / 2;
        $i2 = $i3 / 2;
        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r0, 0, $i0, $i1, $i2, $r2, 0);
        $i2 = $i3 / 2;
        $i2 = $i2 + $i3;
        $r8 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r9 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i1, $i2, $r8);
        $r6 = $r9;
        $r10 = new android.graphics.Canvas;
        specialinvoke $r10.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r6);
        virtualinvoke $r10.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r0, 0.0F, 0.0F, null);
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>()>();
        $f0 = (float) $i3;
        $f2 = (float) $i1;
        $i2 = $i3 + 4;
        $f3 = (float) $i2;
        virtualinvoke $r10.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f0, $f2, $f3, $r3);
        $i2 = $i3 + 4;
        $f2 = (float) $i2;
        virtualinvoke $r10.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r7, 0.0F, $f2, null);
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>()>();
        $r4 = new android.graphics.LinearGradient;
        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        $f2 = (float) $i2;
        $i2 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();
        $i2 = $i2 + 4;
        $f0 = (float) $i2;
        $r5 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;
        specialinvoke $r4.<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode)>(0.0F, $f2, 0.0F, $f0, 1895825407, 16777215, $r5);
        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>($r4);
        $r12 = new android.graphics.PorterDuffXfermode;
        $r13 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode DST_IN>;
        specialinvoke $r12.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r13);
        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r12);
        $f2 = (float) $i3;
        $f1 = (float) $i1;
        $i3 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();
        $i3 = $i3 + 4;
        $f0 = (float) $i3;
        virtualinvoke $r10.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f2, $f1, $f0, $r3);
        return $r9;
    }

    public static android.graphics.Bitmap crop(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap $r0, $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r1;
        float $f0, $f1;
        android.graphics.Bitmap$Config $r3;

        $r0 := @parameter0: android.graphics.Bitmap;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        if $r0 != null goto label1;

        $r0 = null;

     label0:
        return $r0;

     label1:
        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        if $i3 > $i0 goto label2;

        if $i2 <= $i1 goto label0;

     label2:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i3);
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);
        $i3 = $i0 - $i3;
        $i3 = $i3 / 2;
        $f0 = (float) $i3;
        $i3 = $i1 - $i2;
        $i3 = $i3 / 2;
        $f1 = (float) $i3;
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);
        $r1 = new android.graphics.Canvas;
        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r2);
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r0, $f0, $f1, null);
        return $r2;
    }

    public static android.graphics.Bitmap crop(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap decodeLargeImage(java.lang.String,int,int)>($r0, $i0, $i1);
        if $r1 != null goto label0;

        return null;

     label0:
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap crop(android.graphics.Bitmap,int,int)>($r1, $i0, $i1);
        return $r1;
    }

    public static android.graphics.Bitmap cropFillColor(android.graphics.Bitmap, int, int, int)
    {
        android.graphics.Bitmap $r0, $r2;
        int $i0, $i1, $i2, $i3;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f3;
        byte $b4;
        android.graphics.Bitmap$Config $r3;

        $r0 := @parameter0: android.graphics.Bitmap;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $i2 := @parameter3: int;
        $r0 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap crop(android.graphics.Bitmap,int,int)>($r0, $i0, $i1);
        $r2 = $r0;
        $i3 = virtualinvoke $r2.<android.graphics.Bitmap: int getWidth()>();
        $f0 = (float) $i3;
        $i3 = virtualinvoke $r2.<android.graphics.Bitmap: int getHeight()>();
        $f1 = (float) $i3;
        $f3 = (float) $i0;
        $b4 = $f0 cmpl $f3;
        if $b4 != 0 goto label0;

        $f3 = (float) $i1;
        $b4 = $f1 cmpl $f3;
        if $b4 != 0 goto label0;

        return $r0;

     label0:
        $f3 = (float) $i0;
        $f3 = $f3 - $f0;
        $f0 = $f3 / 2.0F;
        $f3 = (float) $i1;
        $f3 = $f3 - $f1;
        $f1 = $f3 / 2.0F;
        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r3);
        $r1 = new android.graphics.Canvas;
        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r0);
        virtualinvoke $r1.<android.graphics.Canvas: void drawColor(int)>($i2);
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r2, $f0, $f1, null);
        return $r0;
    }

    public static android.graphics.Bitmap decodeFile(java.lang.String, int, int)
    {
        java.lang.String $r0, $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.FileNotFoundException $r1;
        java.io.FileInputStream $r2, $r3;
        android.graphics.BitmapFactory$Options $r4;
        android.graphics.Rect $r5;
        android.graphics.Bitmap $r7;
        java.lang.StringBuilder $r9;
        java.lang.Throwable $r10;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r4 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.BitmapFactory$Options createDefaultBitmapFactoryOptions()>();
        $r4.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;
        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r4);
        $i3 = $r4.<android.graphics.BitmapFactory$Options: int outWidth>;
        $i2 = $r4.<android.graphics.BitmapFactory$Options: int outHeight>;
        if $i3 == 0 goto label0;

        if $i2 != 0 goto label1;

     label0:
        return null;

     label1:
        $i4 = $i0 - $i3;
        $i4 = $i4 / 2;
        $i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i4);
        $i3 = $i0 + $i3;
        $i3 = $i3 / 2;
        $i3 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i3);
        $i0 = $i1 - $i2;
        $i0 = $i0 / 2;
        $i0 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i0);
        $i2 = $i1 + $i2;
        $i2 = $i2 / 2;
        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);
        $r5 = new android.graphics.Rect;
        specialinvoke $r5.<android.graphics.Rect: void <init>()>();
        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>($i4, $i0, $i3, $i1);
        $r2 = null;

     label2:
        $r3 = new java.io.FileInputStream;

     label3:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

     label4:
        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>($r3, $r5, null);

     label5:
        staticinvoke <com.moaibot.common.utils.IOUtils: void closeQuietly(java.io.InputStream)>($r3);
        return $r7;

     label6:
        $r1 := @caughtexception;

     label7:
        $r8 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("File not found: ");
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);
        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.moaibot.common.utils.LogUtils: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, $r6, $r1);

     label8:
        staticinvoke <com.moaibot.common.utils.IOUtils: void closeQuietly(java.io.InputStream)>($r2);
        return null;

     label9:
        $r10 := @caughtexception;

     label10:
        staticinvoke <com.moaibot.common.utils.IOUtils: void closeQuietly(java.io.InputStream)>($r2);
        throw $r10;

     label11:
        $r10 := @caughtexception;
        $r2 = $r3;
        goto label10;

     label12:
        $r1 := @caughtexception;
        $r2 = $r3;
        goto label7;

        catch java.io.FileNotFoundException from label3 to label4 with label6;
        catch java.lang.Throwable from label2 to label4 with label9;
        catch java.io.FileNotFoundException from label4 to label5 with label12;
        catch java.lang.Throwable from label4 to label5 with label11;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    public static android.graphics.Bitmap decodeLargeImage(java.lang.String, int, int)
    {
        java.lang.String $r0, $r6, $r9;
        int $i0, $i1, $i3, $i4;
        android.graphics.Bitmap $r1, $r11;
        com.moaibot.common.utils.GraphUtils$ImageBound $r2;
        java.lang.Exception $r3;
        android.graphics.BitmapFactory$Options $r4;
        com.moaibot.common.utils.StopWatchUtils $r5;
        java.io.File $r7;
        boolean $z0;
        java.lang.StringBuilder $r8;
        android.graphics.Bitmap$Config $r10;
        java.lang.Throwable $r12;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r5 = staticinvoke <com.moaibot.common.utils.StopWatchUtils: com.moaibot.common.utils.StopWatchUtils init(java.lang.String)>("Decode Large Image Bytes");
        $r1 = null;

     label0:
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void start(java.lang.String)>("FileExist");
        if $r0 == null goto label2;

        $r7 = new java.io.File;
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r0);
        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

     label1:
        if $z0 != 0 goto label3;

     label2:
        $r6 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void stopAndPrint(java.lang.String)>($r6);
        return null;

     label3:
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void start(java.lang.String)>("ImageBound");
        $r2 = staticinvoke <com.moaibot.common.utils.GraphUtils: com.moaibot.common.utils.GraphUtils$ImageBound imageBounds(java.lang.String)>($r0);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("CalcSampleSize(Image:");
        $i3 = staticinvoke <com.moaibot.common.utils.GraphUtils$ImageBound: int access$0(com.moaibot.common.utils.GraphUtils$ImageBound)>($r2);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");
        $i3 = staticinvoke <com.moaibot.common.utils.GraphUtils$ImageBound: int access$1(com.moaibot.common.utils.GraphUtils$ImageBound)>($r2);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void start(java.lang.String)>($r6);
        if $i0 > 0 goto label4;

        $i0 = 480;

     label4:
        if $i1 > 0 goto label5;

        $i1 = 854;

     label5:
        $i3 = virtualinvoke $r2.<com.moaibot.common.utils.GraphUtils$ImageBound: int getWidth()>();
        $i4 = virtualinvoke $r2.<com.moaibot.common.utils.GraphUtils$ImageBound: int getHeight()>();
        $i1 = staticinvoke <com.moaibot.common.utils.GraphUtils: int calcSampleSize(int,int,int,int)>($i3, $i4, $i0, $i1);
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Decode(SampleSize:");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void start(java.lang.String)>($r6);
        $r4 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.BitmapFactory$Options createDefaultBitmapFactoryOptions()>();
        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>("jpg");
        if $z0 == 0 goto label6;

        $r4.<android.graphics.BitmapFactory$Options: boolean inDither> = 1;
        $r10 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;
        $r4.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r10;

     label6:
        if $i1 == 1 goto label7;

        $r4.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i1;

     label7:
        $r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r4);

     label8:
        $r1 = $r11;
        $r9 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void stopAndPrint(java.lang.String)>($r9);

     label9:
        return $r1;

     label10:
        $r3 := @caughtexception;

     label11:
        $r9 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        staticinvoke <com.moaibot.common.utils.LogUtils: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "", $r3);

     label12:
        $r9 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void stopAndPrint(java.lang.String)>($r9);
        goto label9;

     label13:
        $r12 := @caughtexception;
        $r9 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        virtualinvoke $r5.<com.moaibot.common.utils.StopWatchUtils: void stopAndPrint(java.lang.String)>($r9);
        throw $r12;

        catch java.lang.Exception from label0 to label1 with label10;
        catch java.lang.Throwable from label0 to label1 with label13;
        catch java.lang.Exception from label3 to label8 with label10;
        catch java.lang.Throwable from label3 to label8 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public static android.graphics.Bitmap decodeLargeImage(byte[], int, int, boolean)
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        com.moaibot.common.utils.GraphUtils$ImageBound $r1;
        android.graphics.BitmapFactory$Options $r2;
        com.moaibot.common.utils.StopWatchUtils $r3;
        java.lang.String $r4;
        java.lang.StringBuilder $r5;
        android.graphics.Bitmap$Config $r6;
        android.graphics.Bitmap $r7;

        $r0 := @parameter0: byte[];
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $z0 := @parameter3: boolean;
        $r3 = staticinvoke <com.moaibot.common.utils.StopWatchUtils: com.moaibot.common.utils.StopWatchUtils init(java.lang.String)>("Decode Large Image Bytes");
        $i2 = 1;
        if $i0 <= 0 goto label0;

        if $i1 <= 0 goto label0;

        virtualinvoke $r3.<com.moaibot.common.utils.StopWatchUtils: void start(java.lang.String)>("ImageBound");
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: com.moaibot.common.utils.GraphUtils$ImageBound imageBounds(byte[])>($r0);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("CalcSampleSize(Image:");
        $i2 = staticinvoke <com.moaibot.common.utils.GraphUtils$ImageBound: int access$0(com.moaibot.common.utils.GraphUtils$ImageBound)>($r1);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");
        $i2 = staticinvoke <com.moaibot.common.utils.GraphUtils$ImageBound: int access$1(com.moaibot.common.utils.GraphUtils$ImageBound)>($r1);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r3.<com.moaibot.common.utils.StopWatchUtils: void start(java.lang.String)>($r4);
        $i2 = virtualinvoke $r1.<com.moaibot.common.utils.GraphUtils$ImageBound: int getWidth()>();
        $i3 = virtualinvoke $r1.<com.moaibot.common.utils.GraphUtils$ImageBound: int getHeight()>();
        $i2 = staticinvoke <com.moaibot.common.utils.GraphUtils: int calcSampleSize(int,int,int,int)>($i2, $i3, $i0, $i1);

     label0:
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Decode(SampleSize:");
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r3.<com.moaibot.common.utils.StopWatchUtils: void start(java.lang.String)>($r4);
        $r2 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.BitmapFactory$Options createDefaultBitmapFactoryOptions()>();
        if $z0 == 0 goto label1;

        $r2.<android.graphics.BitmapFactory$Options: boolean inDither> = 1;
        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;
        $r2.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r6;

     label1:
        $i3 = (int) 1;
        if $i2 == $i3 goto label2;

        $r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i2;

     label2:
        $i2 = lengthof $r0;
        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, 0, $i2, $r2);
        $r4 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        virtualinvoke $r3.<com.moaibot.common.utils.StopWatchUtils: void stopAndPrint(java.lang.String)>($r4);
        return $r7;
    }

    public static void expandRect(android.graphics.Rect, int)
    {
        android.graphics.Rect $r0;
        int $i0, $i1, $i2, $i3, $i4;

        $r0 := @parameter0: android.graphics.Rect;
        $i0 := @parameter1: int;
        $i1 = $r0.<android.graphics.Rect: int left>;
        $i2 = $i1 - $i0;
        $i1 = $r0.<android.graphics.Rect: int top>;
        $i3 = $i1 - $i0;
        $i1 = $r0.<android.graphics.Rect: int right>;
        $i4 = $i1 + $i0;
        $i1 = $r0.<android.graphics.Rect: int bottom>;
        $i1 = $i1 + $i0;
        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>($i2, $i3, $i4, $i1);
        return;
    }

    public static void expandRect(android.graphics.RectF, float)
    {
        android.graphics.RectF $r0;
        float $f0, $f1, $f2, $f3, $f4;

        $r0 := @parameter0: android.graphics.RectF;
        $f0 := @parameter1: float;
        $f1 = $r0.<android.graphics.RectF: float left>;
        $f2 = $f1 - $f0;
        $f1 = $r0.<android.graphics.RectF: float top>;
        $f3 = $f1 - $f0;
        $f1 = $r0.<android.graphics.RectF: float right>;
        $f4 = $f1 + $f0;
        $f1 = $r0.<android.graphics.RectF: float bottom>;
        $f1 = $f1 + $f0;
        virtualinvoke $r0.<android.graphics.RectF: void set(float,float,float,float)>($f2, $f3, $f4, $f1);
        return;
    }

    public static void expandRect(android.graphics.RectF, float, float)
    {
        android.graphics.RectF $r0;
        float $f0, $f1, $f2, $f3, $f4;

        $r0 := @parameter0: android.graphics.RectF;
        $f0 := @parameter1: float;
        $f1 := @parameter2: float;
        $f2 = $r0.<android.graphics.RectF: float left>;
        $f3 = $f2 - $f0;
        $f2 = $r0.<android.graphics.RectF: float top>;
        $f4 = $f2 - $f1;
        $f2 = $r0.<android.graphics.RectF: float right>;
        $f0 = $f2 + $f0;
        $f2 = $r0.<android.graphics.RectF: float bottom>;
        $f2 = $f2 + $f1;
        virtualinvoke $r0.<android.graphics.RectF: void set(float,float,float,float)>($f3, $f4, $f0, $f2);
        return;
    }

    public static android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap, float)
    {
        android.graphics.Bitmap $r0, $r7;
        float $f0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;
        android.graphics.Rect $r4;
        android.graphics.RectF $r5;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r6;
        android.graphics.PorterDuffXfermode $r8;
        android.graphics.PorterDuff$Mode $r9;

        $r0 := @parameter0: android.graphics.Bitmap;
        $f0 := @parameter1: float;
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r6);
        $r1 = new android.graphics.Canvas;
        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r7);
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>()>();
        $r4 = new android.graphics.Rect;
        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i1, $i0);
        $r5 = new android.graphics.RectF;
        specialinvoke $r5.<android.graphics.RectF: void <init>(android.graphics.Rect)>($r4);
        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        virtualinvoke $r1.<android.graphics.Canvas: void drawARGB(int,int,int,int)>(0, 0, 0, 0);
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-12434878);
        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r5, $f0, $f0, $r3);
        $r8 = new android.graphics.PorterDuffXfermode;
        $r9 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;
        specialinvoke $r8.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r9);
        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r8);
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r0, $r4, $r4, $r3);
        return $r7;
    }

    public static com.moaibot.common.utils.GraphUtils$ImageBound imageBounds(java.lang.String)
    {
        java.lang.String $r0;
        com.moaibot.common.utils.GraphUtils$ImageBound $r1;
        android.graphics.BitmapFactory$Options $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;
        $r2 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.BitmapFactory$Options createDefaultBitmapFactoryOptions()>();
        $r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;
        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r0, $r2);
        $r1 = new com.moaibot.common.utils.GraphUtils$ImageBound;
        $i1 = $r2.<android.graphics.BitmapFactory$Options: int outWidth>;
        $i0 = $r2.<android.graphics.BitmapFactory$Options: int outHeight>;
        specialinvoke $r1.<com.moaibot.common.utils.GraphUtils$ImageBound: void <init>(int,int)>($i1, $i0);
        return $r1;
    }

    public static com.moaibot.common.utils.GraphUtils$ImageBound imageBounds(byte[])
    {
        byte[] $r0;
        com.moaibot.common.utils.GraphUtils$ImageBound $r1;
        android.graphics.BitmapFactory$Options $r2;
        int $i0, $i2;

        $r0 := @parameter0: byte[];
        $r2 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.BitmapFactory$Options createDefaultBitmapFactoryOptions()>();
        $r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;
        $i0 = lengthof $r0;
        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>($r0, 0, $i0, $r2);
        $r1 = new com.moaibot.common.utils.GraphUtils$ImageBound;
        $i0 = $r2.<android.graphics.BitmapFactory$Options: int outWidth>;
        $i2 = $r2.<android.graphics.BitmapFactory$Options: int outHeight>;
        specialinvoke $r1.<com.moaibot.common.utils.GraphUtils$ImageBound: void <init>(int,int)>($i0, $i2);
        return $r1;
    }

    public static boolean inMoveRange(float, float, float, float, float)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b0;

        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $f2 := @parameter2: float;
        $f3 := @parameter3: float;
        $f4 := @parameter4: float;
        $f5 = $f0 - $f2;
        $b0 = $f5 cmpg $f3;
        if $b0 >= 0 goto label0;

        $f5 = $f0 + $f2;
        $b0 = $f3 cmpg $f5;
        if $b0 >= 0 goto label0;

        $f5 = $f1 - $f2;
        $b0 = $f5 cmpg $f4;
        if $b0 >= 0 goto label0;

        $f5 = $f1 + $f2;
        $b0 = $f4 cmpg $f5;
        if $b0 >= 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    private static void initCompatibility()
    {
        java.lang.Exception $r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        java.lang.reflect.Field $r3;

        $r1 = class "android/graphics/BitmapFactory$Options";

     label0:
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("inPurgeable");
        <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inPurgeableField> = $r3;
        $r1 = class "android/graphics/BitmapFactory$Options";
        $r3 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("inInputShareable");

     label1:
        <com.moaibot.common.utils.GraphUtils: java.lang.reflect.Field inInputShareableField> = $r3;

     label2:
        return;

     label3:
        $r0 := @caughtexception;
        $r2 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        staticinvoke <com.moaibot.common.utils.LogUtils: void d(java.lang.String,java.lang.String)>($r2, "BitmapFactory.Options has no inPurgeable or inInputShareable Field");
        goto label2;

        catch java.lang.Exception from label0 to label1 with label3;
    }

    private static boolean isImageLessThan(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        com.moaibot.common.utils.GraphUtils$ImageBound $r1;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: com.moaibot.common.utils.GraphUtils$ImageBound imageBounds(java.lang.String)>($r0);
        $i2 = virtualinvoke $r1.<com.moaibot.common.utils.GraphUtils$ImageBound: int getWidth()>();
        if $i2 > $i0 goto label0;

        $i2 = virtualinvoke $r1.<com.moaibot.common.utils.GraphUtils$ImageBound: int getHeight()>();
        if $i2 > $i1 goto label0;

        return 1;

     label0:
        return 0;
    }

    public static boolean isPolygonContains(float, float, float[][])
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        float[][] $r0;
        int $i0, $i1, $i2;
        boolean $z0;
        float[] $r1;
        byte $b3;

        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $r0 := @parameter2: float[][];
        $z0 = 1;
        if $r0 == null goto label0;

        $i1 = lengthof $r0;
        if $i1 != 0 goto label2;

     label0:
        $z0 = 0;

     label1:
        return $z0;

     label2:
        $i0 = 0;
        $i1 = lengthof $r0;
        $i1 = $i1 + -1;
        $r1 = $r0[$i1];
        $i2 = (int) 0;
        $f4 = $r1[$i2];
        $i1 = lengthof $r0;
        $i1 = $i1 + -1;
        $r1 = $r0[$i1];
        $i2 = (int) 1;
        $f5 = $r1[$i2];
        $i1 = 0;

     label3:
        $i2 = lengthof $r0;
        if $i1 < $i2 goto label4;

        $i2 = $i0 & 1;
        if $i2 != 0 goto label1;

        return 0;

     label4:
        $r1 = $r0[$i1];
        $i2 = (int) 0;
        $f2 = $r1[$i2];
        $r1 = $r0[$i1];
        $i2 = (int) 1;
        $f3 = $r1[$i2];
        $b3 = $f3 cmpl $f5;
        if $b3 != 0 goto label6;

     label5:
        $f4 = $f2;
        $f5 = $f3;
        $i1 = $i1 + 1;
        goto label3;

     label6:
        $b3 = $f2 cmpg $f4;
        if $b3 >= 0 goto label8;

        $b3 = $f0 cmpl $f4;
        if $b3 >= 0 goto label5;

        $f6 = $f2;

     label7:
        $b3 = $f3 cmpg $f5;
        if $b3 >= 0 goto label11;

        $b3 = $f1 cmpg $f3;
        if $b3 < 0 goto label5;

        $b3 = $f1 cmpl $f5;
        if $b3 >= 0 goto label5;

        $b3 = $f0 cmpg $f6;
        if $b3 >= 0 goto label9;

        $i0 = $i0 + 1;
        goto label5;

     label8:
        $b3 = $f0 cmpl $f2;
        if $b3 >= 0 goto label5;

        $f6 = $f4;
        goto label7;

     label9:
        $f6 = $f0 - $f2;
        $f7 = $f1 - $f3;

     label10:
        $f5 = $f5 - $f3;
        $f5 = $f7 / $f5;
        $f7 = $f4 - $f2;
        $f7 = $f5 * $f7;
        $b3 = $f6 cmpg $f7;
        if $b3 >= 0 goto label5;

        $i0 = $i0 + 1;
        goto label5;

     label11:
        $b3 = $f1 cmpg $f5;
        if $b3 < 0 goto label5;

        $b3 = $f1 cmpl $f3;
        if $b3 >= 0 goto label5;

        $b3 = $f0 cmpg $f6;
        if $b3 >= 0 goto label12;

        $i0 = $i0 + 1;
        goto label5;

     label12:
        $f6 = $f0 - $f4;
        $f7 = $f1 - $f5;
        goto label10;
    }

    public static void makeRect(int, int, int, int, android.graphics.Rect)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.Rect $r0;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $r0 := @parameter4: android.graphics.Rect;
        $i4 = $i2 / 2;
        $i5 = $i0 - $i4;
        $i4 = $i3 / 2;
        $i6 = $i1 - $i4;
        $i4 = $i2 / 2;
        $i2 = $i4 + $i0;
        $i4 = $i3 / 2;
        $i4 = $i4 + $i1;
        virtualinvoke $r0.<android.graphics.Rect: void set(int,int,int,int)>($i5, $i6, $i2, $i4);
        return;
    }

    public static void makeRectF(float, float, float, float, android.graphics.RectF)
    {
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.RectF $r0;

        $f0 := @parameter0: float;
        $f1 := @parameter1: float;
        $f2 := @parameter2: float;
        $f3 := @parameter3: float;
        $r0 := @parameter4: android.graphics.RectF;
        $f4 = $f2 / 2.0F;
        $f6 = $f0 - $f4;
        $f4 = $f3 / 2.0F;
        $f7 = $f1 - $f4;
        $f4 = $f2 / 2.0F;
        $f4 = $f4 + $f0;
        $f5 = $f3 / 2.0F;
        $f5 = $f5 + $f1;
        virtualinvoke $r0.<android.graphics.RectF: void set(float,float,float,float)>($f6, $f7, $f4, $f5);
        return;
    }

    public static int parseColor(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.Exception $r1;
        int $i0;
        char $c2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;
        if $r0 == null goto label0;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        return 0;

     label1:
        $r2 = $r0;

     label2:
        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);
        if $c2 == 35 goto label3;

        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("#");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r2);

     label4:
        return $i0;

     label5:
        $r1 := @caughtexception;
        return 0;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public static void resizeFile(java.lang.String, java.lang.String, int, int)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        android.graphics.Bitmap $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;
        $r1 := @parameter1: java.lang.String;
        $i0 := @parameter2: int;
        $i1 := @parameter3: int;
        $z0 = staticinvoke <com.moaibot.common.utils.GraphUtils: boolean isImageLessThan(java.lang.String,int,int)>($r0, $i0, $i1);
        if $z0 == 0 goto label1;

        staticinvoke <com.moaibot.common.utils.GraphUtils: void copyFile(java.lang.String,java.lang.String)>($r0, $r1);

     label0:
        return;

     label1:
        $r2 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap scaleInsideImage(java.lang.String,int,int)>($r0, $i0, $i1);
        staticinvoke <com.moaibot.common.utils.GraphUtils: void saveImage(android.graphics.Bitmap,java.lang.String,int)>($r2, $r1, 95);
        goto label0;
    }

    public static void saveImage(android.graphics.Bitmap, java.lang.String, int)
    {
        android.graphics.Bitmap $r0;
        java.lang.String $r1, $r7;
        int $i0;
        java.lang.Exception $r2;
        java.io.File $r3, $r6;
        java.io.FileOutputStream $r4, $r5;
        boolean $z0;
        android.graphics.Bitmap$CompressFormat $r8;
        java.lang.Throwable $r9;

        $r0 := @parameter0: android.graphics.Bitmap;
        $r1 := @parameter1: java.lang.String;
        $i0 := @parameter2: int;
        $r3 = new java.io.File;
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);
        $r6 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();
        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();
        $r4 = null;

     label0:
        $r5 = new java.io.FileOutputStream;

     label1:
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label2:
        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();
        $z0 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>(".png");
        if $z0 == 0 goto label5;

        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;
        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, $i0, $r5);

     label3:
        staticinvoke <com.moaibot.common.utils.IOUtils: void closeQuietly(java.io.OutputStream)>($r5);

     label4:
        return;

     label5:
        $r8 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label6:
        virtualinvoke $r0.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r8, $i0, $r5);

     label7:
        goto label3;

     label8:
        $r2 := @caughtexception;
        $r4 = $r5;

     label9:
        $r7 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        staticinvoke <com.moaibot.common.utils.LogUtils: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, "", $r2);

     label10:
        staticinvoke <com.moaibot.common.utils.IOUtils: void closeQuietly(java.io.OutputStream)>($r4);
        goto label4;

     label11:
        $r9 := @caughtexception;

     label12:
        staticinvoke <com.moaibot.common.utils.IOUtils: void closeQuietly(java.io.OutputStream)>($r4);
        throw $r9;

     label13:
        $r9 := @caughtexception;
        $r4 = $r5;
        goto label12;

     label14:
        $r2 := @caughtexception;
        goto label9;

        catch java.lang.Exception from label1 to label2 with label14;
        catch java.lang.Throwable from label0 to label2 with label11;
        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Throwable from label2 to label3 with label13;
        catch java.lang.Exception from label6 to label7 with label8;
        catch java.lang.Throwable from label5 to label7 with label13;
        catch java.lang.Throwable from label9 to label10 with label11;
    }

    public static android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap, float)
    {
        android.graphics.Bitmap $r0;
        float $f0, $f1;
        int $i0, $i2;
        byte $b1;

        $r0 := @parameter0: android.graphics.Bitmap;
        $f0 := @parameter1: float;
        $b1 = $f0 cmpl 1.0F;
        if $b1 != 0 goto label0;

        return $r0;

     label0:
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $f1 = (float) $i0;
        $f1 = $f1 * $f0;
        $i2 = (int) $f1;
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        $f1 = (float) $i0;
        $f1 = $f1 * $f0;
        $i0 = (int) $f1;
        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i2, $i0, 1);
        return $r0;
    }

    public static android.graphics.Bitmap scaleBitmap(java.lang.String, float)
    {
        java.lang.String $r0;
        float $f0;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.lang.String;
        $f0 := @parameter1: float;
        $r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r0);
        if $r1 != null goto label0;

        return null;

     label0:
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap,float)>($r1, $f0);
        return $r1;
    }

    public static android.graphics.Bitmap scaleCropBitmap(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r1, $r2;
        byte $b4;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: android.graphics.Bitmap;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        if $r0 != null goto label0;

        $r1 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        staticinvoke <com.moaibot.common.utils.LogUtils: void w(java.lang.String,java.lang.String)>($r1, "ScaleCropBitmap: bitmap is null");
        return null;

     label0:
        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $f1 = (float) $i3;
        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        $f0 = (float) $i3;
        $f3 = (float) $i0;
        $b4 = $f1 cmpg $f3;
        if $b4 <= 0 goto label1;

        $f3 = (float) $i1;
        $b4 = $f0 cmpg $f3;
        if $b4 > 0 goto label2;

     label1:
        return $r0;

     label2:
        $f3 = (float) $i0;
        $f3 = $f3 / $f1;
        $f2 = (float) $i1;
        $f2 = $f2 / $f0;
        $i3 = $i0;
        $i2 = $i1;
        $b4 = $f3 cmpg $f2;
        if $b4 >= 0 goto label4;

        $f3 = $f1 * $f2;
        $i3 = (int) $f3;

     label3:
        $r1 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        $r3 = new java.lang.StringBuilder;
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.moaibot.common.utils.LogUtils: void d(java.lang.String,java.lang.String)>($r1, $r2);
        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r0, $i3, $i2, 1);
        return $r0;

     label4:
        $b4 = $f3 cmpl $f2;
        if $b4 <= 0 goto label3;

        $f3 = $f0 * $f3;
        $i2 = (int) $f3;
        goto label3;
    }

    public static android.graphics.Bitmap scaleCropImage(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        android.graphics.Bitmap $r1;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap decodeLargeImage(java.lang.String,int,int)>($r0, $i0, $i1);
        if $r1 != null goto label0;

        return null;

     label0:
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap scaleCropBitmap(android.graphics.Bitmap,int,int)>($r1, $i0, $i1);
        return $r1;
    }

    public static void scaleCropImageToFile(java.lang.String, int, int, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        android.graphics.Bitmap $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r1 := @parameter3: java.lang.String;
        $z0 = staticinvoke <com.moaibot.common.utils.GraphUtils: boolean isImageLessThan(java.lang.String,int,int)>($r0, $i0, $i1);
        if $z0 == 0 goto label1;

        staticinvoke <com.moaibot.common.utils.GraphUtils: void copyFile(java.lang.String,java.lang.String)>($r0, $r1);

     label0:
        return;

     label1:
        $r2 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap scaleCropImage(java.lang.String,int,int)>($r0, $i0, $i1);
        if $r2 == null goto label0;

        staticinvoke <com.moaibot.common.utils.GraphUtils: void saveImage(android.graphics.Bitmap,java.lang.String,int)>($r2, $r1, 100);
        goto label0;
    }

    public static android.graphics.Bitmap scaleFitCropBitmap(android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap $r0, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        android.graphics.Canvas $r1;
        android.graphics.Rect $r2, $r5;
        android.graphics.Paint $r3;
        float $f0, $f1, $f2;
        java.lang.String $r6, $r7;
        java.lang.StringBuilder $r8;
        byte $b5, $b8;
        android.graphics.Bitmap$Config $r9;

        $r0 := @parameter0: android.graphics.Bitmap;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        if $r0 != null goto label0;

        $r6 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        staticinvoke <com.moaibot.common.utils.LogUtils: void w(java.lang.String,java.lang.String)>($r6, "ScaleFitCropBitmap: bitmap is null");
        return null;

     label0:
        $r5 = new android.graphics.Rect;
        specialinvoke $r5.<android.graphics.Rect: void <init>()>();
        $r2 = new android.graphics.Rect;
        specialinvoke $r2.<android.graphics.Rect: void <init>()>();
        $i4 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $i3 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        if $i4 > $i0 goto label3;

        if $i3 > $i1 goto label1;

        $r6 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("ScaleFitCropBitmap 1, Bitmap: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.moaibot.common.utils.LogUtils: void d(java.lang.String,java.lang.String)>($r6, $r7);
        return $r0;

     label1:
        $i2 = $i3 - $i1;
        $i2 = $i2 / 2;
        $i6 = $i3 + $i1;
        $i6 = $i6 / 2;
        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>(0, $i2, $i4, $i6);
        $i6 = $i0 - $i4;
        $i6 = $i6 / 2;
        $i2 = $i0 + $i4;
        $i2 = $i2 / 2;
        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>($i6, 0, $i2, $i1);
        $r7 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("ScaleFitCropBitmap 2, Bitmap: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], Result: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);
        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.moaibot.common.utils.LogUtils: void d(java.lang.String,java.lang.String)>($r7, $r6);

     label2:
        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r9);
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>()>();
        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        virtualinvoke $r3.<android.graphics.Paint: void setDither(boolean)>(1);
        virtualinvoke $r3.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);
        $r1 = new android.graphics.Canvas;
        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r4);
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r0, $r5, $r2, $r3);
        return $r4;

     label3:
        if $i3 > $i1 goto label4;

        $i7 = $i4 - $i0;
        $i7 = $i7 / 2;
        $i6 = $i4 + $i0;
        $i6 = $i6 / 2;
        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>($i7, 0, $i6, $i3);
        $i7 = $i1 - $i3;
        $i7 = $i7 / 2;
        $i6 = $i1 + $i3;
        $i6 = $i6 / 2;
        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, $i7, $i0, $i6);
        $r7 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("ScaleFitCropBitmap 3, Bitmap: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], Result: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);
        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.moaibot.common.utils.LogUtils: void d(java.lang.String,java.lang.String)>($r7, $r6);
        goto label2;

     label4:
        $f1 = (float) $i4;
        $f0 = (float) $i0;
        $f1 = $f1 / $f0;
        $f0 = (float) $i3;
        $f2 = (float) $i1;
        $f0 = $f0 / $f2;
        $b5 = $f1 cmpg $f0;
        if $b5 >= 0 goto label6;

        $f2 = (float) $i1;
        $f2 = $f2 * $f1;
        $i2 = (int) $f2;
        $i7 = $i3 - $i2;
        $i7 = $i7 / 2;
        $i6 = $i3 + $i2;
        $i6 = $i6 / 2;
        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>(0, $i7, $i4, $i6);

     label5:
        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i0, $i1);
        $r7 = <com.moaibot.common.utils.GraphUtils: java.lang.String TAG>;
        $r8 = new java.lang.StringBuilder;
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("ScaleFitCropBitmap 4, Bitmap: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], Scale: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], Result: [");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");
        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);
        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <com.moaibot.common.utils.LogUtils: void d(java.lang.String,java.lang.String)>($r7, $r6);
        goto label2;

     label6:
        $b8 = $f1 cmpl $f0;
        if $b8 <= 0 goto label5;

        $f2 = (float) $i0;
        $f2 = $f2 * $f0;
        $i2 = (int) $f2;
        $i7 = $i4 - $i2;
        $i7 = $i7 / 2;
        $i6 = $i4 + $i2;
        $i6 = $i6 / 2;
        virtualinvoke $r5.<android.graphics.Rect: void set(int,int,int,int)>($i7, 0, $i6, $i3);
        goto label5;
    }

    public static android.graphics.Bitmap scaleInsideImage(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        android.graphics.Bitmap $r1;
        float $f0, $f1, $f2, $f3;
        byte $b3;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap decodeLargeImage(java.lang.String,int,int)>($r0, $i0, $i1);
        if $r1 != null goto label1;

        $r1 = null;

     label0:
        return $r1;

     label1:
        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();
        $f1 = (float) $i2;
        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();
        $f0 = (float) $i2;
        $f3 = (float) $i0;
        $b3 = $f1 cmpg $f3;
        if $b3 > 0 goto label2;

        $f3 = (float) $i1;
        $b3 = $f0 cmpg $f3;
        if $b3 <= 0 goto label0;

     label2:
        $f3 = (float) $i0;
        $f3 = $f3 / $f1;
        $f2 = (float) $i1;
        $f2 = $f2 / $f0;
        $b3 = $f3 cmpg $f2;
        if $b3 >= 0 goto label4;

        $f3 = $f0 * $f3;
        $i1 = (int) $f3;

     label3:
        $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r1, $i0, $i1, 1);
        return $r1;

     label4:
        $b3 = $f3 cmpl $f2;
        if $b3 <= 0 goto label3;

        $f3 = $f1 * $f2;
        $i0 = (int) $f3;
        goto label3;
    }

    public static void scaleInsideImageToFile(java.lang.String, int, int, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        android.graphics.Bitmap $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $i1 := @parameter2: int;
        $r1 := @parameter3: java.lang.String;
        $z0 = staticinvoke <com.moaibot.common.utils.GraphUtils: boolean isImageLessThan(java.lang.String,int,int)>($r0, $i0, $i1);
        if $z0 == 0 goto label1;

        staticinvoke <com.moaibot.common.utils.GraphUtils: void copyFile(java.lang.String,java.lang.String)>($r0, $r1);

     label0:
        return;

     label1:
        $r2 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap scaleInsideImage(java.lang.String,int,int)>($r0, $i0, $i1);
        staticinvoke <com.moaibot.common.utils.GraphUtils: void saveImage(android.graphics.Bitmap,java.lang.String,int)>($r2, $r1, 100);
        goto label0;
    }

    public static android.graphics.Bitmap scaleInsideXImage(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i2;
        android.graphics.Bitmap $r1;
        float $f0, $f1;
        byte $b1;

        $r0 := @parameter0: java.lang.String;
        $i0 := @parameter1: int;
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap decodeLargeImage(java.lang.String,int,int)>($r0, $i0, 0);
        if $r1 != null goto label1;

        $r1 = null;

     label0:
        return $r1;

     label1:
        $i2 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();
        $f0 = (float) $i2;
        $f1 = (float) $i0;
        $b1 = $f0 cmpg $f1;
        if $b1 <= 0 goto label0;

        $f1 = (float) $i0;
        $f0 = $f1 / $f0;
        $r1 = staticinvoke <com.moaibot.common.utils.GraphUtils: android.graphics.Bitmap scaleBitmap(java.lang.String,float)>($r0, $f0);
        return $r1;
    }

    public static java.lang.String toColor(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);
        return $r0;
    }
}
