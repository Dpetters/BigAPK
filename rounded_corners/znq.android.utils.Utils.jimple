public class znq.android.utils.Utils extends java.lang.Object
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        znq.android.utils.Utils $r0;

        $r0 := @this: znq.android.utils.Utils;
        specialinvoke $r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static android.widget.LinearLayout$LayoutParams createLinearLayoutParams(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        android.widget.LinearLayout$LayoutParams $r0;

        $i0 := @parameter0: int;
        $i1 := @parameter1: int;
        $i2 := @parameter2: int;
        $i3 := @parameter3: int;
        $r0 = new android.widget.LinearLayout$LayoutParams;
        specialinvoke $r0.<android.widget.LinearLayout$LayoutParams: void <init>(int,int)>(-2, -2);
        virtualinvoke $r0.<android.widget.LinearLayout$LayoutParams: void setMargins(int,int,int,int)>($i0, $i1, $i2, $i3);
        return $r0;
    }

    public static android.graphics.Rect getDesktopRect(android.content.Context)
    {
        android.content.Context $r0;
        int $i0, $i2, $i3;
        android.view.Display $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r4;
        android.graphics.Rect $r5;

        $r0 := @parameter0: android.content.Context;
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");
        $r4 = (android.view.WindowManager) $r2;
        $r1 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();
        $i3 = staticinvoke <znq.android.utils.Utils: int getStatusBarHeight(android.content.Context)>($r0);
        $i2 = virtualinvoke $r1.<android.view.Display: int getWidth()>();
        $i0 = virtualinvoke $r1.<android.view.Display: int getHeight()>();
        $r5 = new android.graphics.Rect;
        specialinvoke $r5.<android.graphics.Rect: void <init>(int,int,int,int)>(0, $i3, $i2, $i0);
        return $r5;
    }

    public static float getDipFromPixels(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;

        $r0 := @parameter0: android.content.Context;
        $f0 := @parameter1: float;
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();
        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f1 = $r2.<android.util.DisplayMetrics: float density>;
        $f1 = $f0 / $f1;
        return $f1;
    }

    public static int getDipFromPixels(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float $f0;

        $r0 := @parameter0: android.content.Context;
        $i0 := @parameter1: int;
        $f0 = (float) $i0;
        $f0 = staticinvoke <znq.android.utils.Utils: float getDipFromPixels(android.content.Context,float)>($r0, $f0);
        $i0 = (int) $f0;
        return $i0;
    }

    public static float getDisplayDensity(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        float $f0;

        $r0 := @parameter0: android.content.Context;
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();
        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();
        $f0 = $r2.<android.util.DisplayMetrics: float density>;
        return $f0;
    }

    public static int getOrientation(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        android.content.res.Resources $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        android.content.res.Configuration $r4;

        $r0 := @parameter0: android.content.Context;
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();
        $r4 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();
        $i0 = $r4.<android.content.res.Configuration: int orientation>;
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getOrientation(): ");
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <znq.android.utils.logging.DebugLog: void v(java.lang.String,java.lang.String)>("znq :: Utils", $r3);
        return $i0;
    }

    public static float getPixelsFromDip(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;

        $r0 := @parameter0: android.content.Context;
        $f0 := @parameter1: float;
        $f1 = staticinvoke <znq.android.utils.Utils: float getDisplayDensity(android.content.Context)>($r0);
        $f1 = $f0 * $f1;
        return $f1;
    }

    public static int getPixelsFromDip(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float $f0;

        $r0 := @parameter0: android.content.Context;
        $i0 := @parameter1: int;
        $f0 = (float) $i0;
        $f0 = staticinvoke <znq.android.utils.Utils: float getPixelsFromDip(android.content.Context,float)>($r0, $f0);
        $i0 = (int) $f0;
        return $i0;
    }

    public static android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0, $r7;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r3;
        android.graphics.Rect $r4;
        android.graphics.RectF $r5;
        float $f0;
        int $i0, $i1;
        android.graphics.Bitmap$Config $r6;
        double $d0, $d1;
        android.graphics.PorterDuffXfermode $r8;
        android.graphics.PorterDuff$Mode $r9;

        $r0 := @parameter0: android.graphics.Bitmap;
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        $r6 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;
        $r7 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r6);
        $r1 = new android.graphics.Canvas;
        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r7);
        $r3 = new android.graphics.Paint;
        specialinvoke $r3.<android.graphics.Paint: void <init>()>();
        $r4 = new android.graphics.Rect;
        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();
        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i1, $i0);
        $r5 = new android.graphics.RectF;
        specialinvoke $r5.<android.graphics.RectF: void <init>(android.graphics.Rect)>($r4);
        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();
        $d0 = (double) $i1;
        $d1 = $d0 / 10.0;
        $f0 = (float) $d1;
        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);
        virtualinvoke $r1.<android.graphics.Canvas: void drawARGB(int,int,int,int)>(0, 0, 0, 0);
        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(-12434878);
        virtualinvoke $r1.<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>($r5, $f0, $f0, $r3);
        $r8 = new android.graphics.PorterDuffXfermode;
        $r9 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;
        specialinvoke $r8.<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff$Mode)>($r9);
        virtualinvoke $r3.<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>($r8);
        virtualinvoke $r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>($r0, $r4, $r4, $r3);
        return $r7;
    }

    public static int getScreenHeight(android.content.Context)
    {
        android.content.Context $r0;
        android.view.Display $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r4;
        int $i0;

        $r0 := @parameter0: android.content.Context;
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");
        $r4 = (android.view.WindowManager) $r2;
        $r1 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();
        $i0 = virtualinvoke $r1.<android.view.Display: int getHeight()>();
        return $i0;
    }

    public static int getScreenWidth(android.content.Context)
    {
        android.content.Context $r0;
        android.view.Display $r1;
        java.lang.Object $r2;
        android.view.WindowManager $r4;
        int $i0;

        $r0 := @parameter0: android.content.Context;
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");
        $r4 = (android.view.WindowManager) $r2;
        $r1 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();
        $i0 = virtualinvoke $r1.<android.view.Display: int getWidth()>();
        return $i0;
    }

    public static int getStatusBarHeight(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.Exception $r1;
        java.lang.Class $r3;
        java.lang.reflect.Field $r4;
        android.content.res.Resources $r5;

        $r0 := @parameter0: android.content.Context;

     label0:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.android.internal.R$dimen");
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("status_bar_height");
        $i0 = virtualinvoke $r4.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();
        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getDimensionPixelSize(int)>($i0);

     label1:
        return $i0;

     label2:
        $r1 := @caughtexception;
        $i0 = staticinvoke <znq.android.utils.Utils: int getPixelsFromDip(android.content.Context,int)>($r0, 25);
        return $i0;

        catch java.lang.Exception from label0 to label1 with label2;
    }
}
